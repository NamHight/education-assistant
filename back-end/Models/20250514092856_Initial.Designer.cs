// <auto-generated />
using System;
using Education_assistant.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Education_assistant.Models
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20250514092856_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Education_assistant.Models.GiangVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("longtext")
                        .HasColumnName("anh_dai_dien");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cccd");

                    b.Property<int>("ChucVu")
                        .HasColumnType("int")
                        .HasColumnName("chuc_vu");

                    b.Property<string>("ChuyenNganh")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("chuyen_nganh");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DiaChi")
                        .HasColumnType("longtext")
                        .HasColumnName("dia_chi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<int?>("GioiTinh")
                        .HasColumnType("int")
                        .HasColumnName("gioi_tinh");

                    b.Property<string>("HoTen")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ho_ten");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ngay_sinh");

                    b.Property<DateTime?>("NgayVaoTruong")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ngay_vao_truong");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("so_dien_thoai");

                    b.Property<Guid?>("TaiKhoanId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tai_khoan_id");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("trang_thai");

                    b.Property<string>("TrinhDo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("trinh_do");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("TaiKhoanId")
                        .IsUnique();

                    b.ToTable("giang_vien");
                });

            modelBuilder.Entity("Education_assistant.Models.LopHoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<Guid?>("GiangVienId")
                        .HasColumnType("char(36)")
                        .HasColumnName("giang_vien_id");

                    b.Property<string>("MaLopHoc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ma_lop_hoc");

                    b.Property<int>("SiSo")
                        .HasColumnType("int")
                        .HasColumnName("si_so");

                    b.Property<string>("TenLopHoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("nam_hoc");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("GiangVienId");

                    b.ToTable("lop_hoc");
                });

            modelBuilder.Entity("Education_assistant.Models.TaiKhoan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ngay_dang_nhap");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("ResetToken")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reset_token");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("reset_expires");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trang_thai");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("tai_khoan");
                });

            modelBuilder.Entity("Education_assistant.Models.GiangVien", b =>
                {
                    b.HasOne("Education_assistant.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("GiangVien")
                        .HasForeignKey("Education_assistant.Models.GiangVien", "TaiKhoanId");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Education_assistant.Models.LopHoc", b =>
                {
                    b.HasOne("Education_assistant.Models.GiangVien", "GiangVien")
                        .WithMany("DanhSachLopHoc")
                        .HasForeignKey("GiangVienId");

                    b.Navigation("GiangVien");
                });

            modelBuilder.Entity("Education_assistant.Models.GiangVien", b =>
                {
                    b.Navigation("DanhSachLopHoc");
                });

            modelBuilder.Entity("Education_assistant.Models.TaiKhoan", b =>
                {
                    b.Navigation("GiangVien");
                });
#pragma warning restore 612, 618
        }
    }
}
